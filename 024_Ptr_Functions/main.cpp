// PtrFunctions
#include <iostream>
#include <stdlib.h>
#include <math.h>

using namespace std;

//прототип функции меняющей значения двух переменных местами
//void Change(int A, int B);
void Change(int, int); //в прототипе можно не указывать имена параметров, но типы данных обязательно

//прототип функции меняющей хначения двух переменных местами, принемает адреса переменных при вызове
//void Change_Pointers(int* pA, int* pB);
void Change_Pointers(int*, int*); //в прототипе можно не указывать имена параметров, но типы данных обязательно

//функция решения линейного уравнения
inline void Equation(double k, double b, double* x)
{
	//double* x=&x1;
	*x = -b / k;
	//return Не нужен и может быть использован для возврата друго значения
}
//перегрузка функции для решения квадратного уравнения
double Equation(double a, double b, double c, double* x1, double* x2)
{
	//double* x1=&x1;
	//double* x2=&x2;
	double D = pow(b, 2) - 4 * a * c;
	//если уравнение линейное вызываем функцию для его решения
	if (a == 0.0)Equation(b, c, x1); //передаем адрес одной переменой
	else
	{
		if (D >= 0.0)
		{
			//помещаем результаты вычислений по двум адреса, переданным в указатели x1 и x2 при вызове функции
			*x1 = (-b - sqrt(D)) / (2 * a);
			*x2 = (-b + sqrt(D)) / (2 * a);
		}
	}
	return D; //return используется для определения сработала ли фнуция(нашла ли корни)
}

int main()
{
	system("chcp 1251");
	system("cls");
	//int One = 15, Two = -3;
	//cout<<"Число One: "<<One<<" Число Two: "<<Two<<endl;
	//Change(One, Two); //в функцию при вызове передаются только значения(содержимое), а не сами переменные
	//cout<<"Число One: "<<One<<" Число Two: "<<Two<<endl;
	//cout <<"\n"<< endl;
	//Change_Pointers(&One, &Two); //при вызове функции передаем в неё адреса переменных, полученные через операцию взятие адреса
	//cout << "Число One: " << One << " Число Two: " << Two << endl;
	//int *pOne = &One, *pTwo = &Two; //объявление и инициализация двух указателей
	//Change_Pointers(pOne, pTwo); //при вызове функции передаем в неё адреса переменных, полученные как содержимое укзаателей pOne и pTwo
	//cout << "Число One: " << One << " Число Two: " << Two << endl;

	double a = 8.0, b = -8.0, k = 4.0, c = 2.0, x1 = 0.0, x2 = 0.0;
	Equation(k, b, &x1); //вызов функции, помещает результат вычислений по адресу переменной x1, переданному при вызове функции
	cout << "X= " << x1 << endl;
	double D = Equation(a, b, c, &x1, &x2); //передаем коэффициенты и адреса переменных, по которым будут помещены результаты
	if (a == 0.0)cout << "X= " << x1 << endl;
	else
		if (D < 0)cout << "Нет действительных корней!" << endl;
		else cout << "X1= " << x1 << "\nX2= " << x2 << endl;
}
//реализация функции меняющей значения двух переменных местами
void Change(int A, int B)  //копирование значений в собственные переменные А и В(параметры функции)
{ //int A=One, B=Two; //функция работает только с копиями значений
	cout << "Работает функция Change!" << endl;
	cout << "Первое число: " << A << " Второе число: " << B << endl;
	int temp = A;
	A = B;
	B = temp;
	cout << "Первое число: " << A << " Второе число: " << B << endl;
	cout << "Функция Change завершила работу!" << endl;
}
//реализация функции меняющей хначения двух переменных местами, принемает адреса переменных при вызове
void Change_Pointers(int* pA, int* pB)
{
	//int* pA=&One;
	//int* pB=&Two;
	//int* pA=pOne;
	//int* pB=pTwo;
	int temp = *pA;
	*pA = *pB;
	*pB = temp;
}
