// DynamicArray2D
#include <iostream>
#include <stdlib.h>
#include <time.h>

using namespace std;

//функция подсчета суммы всех элементов динамического двумерного массива
int Summa(int** Array, int N, int M)
//передается адрес начала динамического двумерного массива(адрес массива указателей int*)
{
	int Summa = 0;
	for (int i = 0; i < N; i++)
	{
		for (int j = 0; j < M; j++)
		{
			Summa += Array[i][j];
		}
	}
	return Summa;
}

int main()
{
	system("chcp 1251");
	system("cls");
	srand(time(NULL));
	//статический двумерный массив
	int A[3][4] = { {1,2,3,4},{5,6,7,8},{9,10,11,12} };
	//статический одномерный массив
	int B[4] = { 1,2,3,4 };

	//динамический двумерный массив
	int N = 0, M = 0; //кол-во строк и столбцов. 
	//N - кол-во строк(кол-во указателей в массиве int*), M - кол-во столбцов(кол-во значений в массивах элементов типа данных int)

	cout << "Введите кол-во строк: "; cin >> N;
	cout << "Введите кол-во столбцов: "; cin >> M;
	//двумерный динамический массив
	//Array - указатель на массив указателей, хранящих адреса массивов значений
	//Array(int**) - Указатель на массив указателей(int*), где каждый указатель указывает на массив элементов(int)
	int** Array = new int* [N] {}; //динамическое выделение памяти под массив указателей(массив адресо массивов со значениями)
	//Проверка выделения памяти!

	//выделение памяти под адреса строк, собранные в массив указателей
	for (int i = 0; i < N; i++)
	{
		//выделение памяти под каждую i-ю строку(по М элементовтипа данных int в каждой)
		Array[i] = new int[M] {};
		//Проверка выделения памяти!
		//можно добавить вложенный цикл и заполнить массиыв данными
	}
	//общее кол-во выделения памяти будет N+1 раз(кол-во строк +1)

	//работа с двумерным динамическим массивом
	for (int i = 0; i < N; i++)
	{
		//Array[i] = ReSize(Array[i], M, 10); //изменения размера кждой строки
		for (int j = 0; j < M; j++)
		{

			Array[i][j] = rand() % (100 - (-99)) - 99;
			cout << "Array[" << i << "][" << j << "]=" << Array[i][j] << "\t";
			//Так работает внутри компилятор, так тоже можно
			//Array[i][j]    *(*(Array+i)+j)
			//*(*(Array+i)+j)=rand()%(100-(-99))-99;
			//cout<<"Array["<<i<<"]["<<j<<"]="<<*(*(Array+i)+j)<<"\t\t";
		}
		cout << endl;
	}
	cout << "Сумма всех элементов массива: " << Summa(Array, N, M) << endl;


	//освобождение памяти
	//цикл освобождения памяти, выделенной под каждую строку(динамические одномерные массиы элементов типа данных int)
	for (int i = 0; i < N; i++)
	{
		delete[] Array[i];
		Array[i] = nullptr;
	}
	//освобождение памяти, выделенной под массив адресов строк(динамический одномерный массив указателей int*)
	delete[] Array;
	Array = nullptr;
}
