// DefaultArgumets
#include <iostream>
#include <locale.h>

using namespace std;
//прототип функции, которая выводит символы на экран
//int Symbols(char symbol='%', int rows = 1, int columns = 10); //значения параметров по умолчанию
//при использовании прототипа указываются только в нем 
int Symbols(char = '%', int = 1, int = 10); //имена параметров при этом можно не указывать


int main()
{
    setlocale(LC_ALL, "rus");
    int rows = 3, columns = 7, count = 0;
    char symbol = '*';
    count = Symbols(symbol, rows, columns); //вызов с указанием значений всех параметров
    cout << "\nКол-во вызовов функции: " << count << endl;
    count = Symbols(symbol, rows); //вызов функции со значение последнего параметра по умолчанию
    cout << "\nКол-во вызовов функции: " << count << endl;
    count = Symbols(symbol); //вызов функции со значениями всех параметров, кроме первого, взятыми по умолчанию
    cout << "\nКол-во вызовов функции: " << count << endl;
    count = Symbols(); //вызов функции со значениями всех параметров, взятыми по умолчанию
    cout << "\nКол-во вызовов функции: " << count << endl;
    count = Symbols('#'); //вызов функции со значениями всех параметров, кроме первого, взятыми по умолчанию
    cout << "\nКол-во вызовов функции: " << count << endl;
    //лишний вызов функции
    count = Symbols('$', 10); //вызов функции со значение последнего параметра по умолчанию
    cout << "\nКол-во вызовов функции: " << count << endl;
    count = Symbols(); //вызов функции со значениями всех параметров, взятыми по умолчанию
    cout << "\nКол-во вызовов функции: " << count << endl;

}
//Реализация функции, которая выводит символы на экран
int Symbols(char symbol, int rows, int columns)
//если есть прототип значения по умолчанию указываются только в нем, а имена в реализации обязательны
{
    static int call = 0; //статическая локальная переменная, считающая кол-во вызовов функции
    call++; //изменение кол-во вызовов функции
    if (call <= 5) //ограничение кол-ва вызвов функции
    {
        for (int i = 0; i < rows; i++)
        {
            for (int j = 0; j < columns; j++)
            {
                cout << symbol;
            }
            cout << endl;
        }
    }
    else cout << "Привышено кол-во вызовов функции!" << endl;
    return call; //возвращаем кол-во вызовов функции
}


