// Pointers
#include <iostream>
#include <stdlib.h>

using namespace std;

int main()
{
	system("chcp 1251");
	system("cls");
	int A = -153; //объявленеи и инициализация перменной
	cout << "Адрес переменной А: " << &A << endl;
	//&A - операция взятие адреса переменной А
	//объявление указателя на тип данных int
	int* pA; //неинециализированный указатель
	pA = &A; //присваивание указателю pA адреса переменной А
	cout << "Содержимое указателя pA: " << pA << endl; //указатель хранит адрес переменной
	cout << "Значение переменной А: " << A << endl; //значение переменной по её имени
	cout << "Значение переменной А через указатель pA: " << *pA << endl;
	//*pA - разыменование указателя(доступ к значению переменной А, адрес которой хранит указтель pA)
	int B = *pA + 3; //-153+3
	cout << "Значение переменной B: " << B << endl;
	*pA = 200; //A=200;
	cout << "Значение переменной А: " << A << endl;

	int* pB = &B; //объявление указателя и инициализация его адресом переменной В
	*pB = *pA; //B=A; //присвоить объекту(переменной В), чей адрес хранится в указателе pB
	//значение объекта(переменной А), чей адрес хранится в указателе pA
	cout << "Значение переменной А: " << A << endl;
	cout << "Значение переменной B: " << B << endl;
	system("cls");
	int* ptr = pA; //указатель ptr будет указывать на то же место в памяти, что и указатль pA(на перменнуа А)
	cout << "Содержимое указателя pA:  " << pA << endl;
	cout << "Содержимое указателя ptr: " << ptr << endl;
	*ptr = 1000; //ptr тоде меняет содержимое переменной А
	system("cls");
	cout << "Значение переменной А: " << A << endl;
	cout << "Содержимое указателя pA: " << pA << endl;
	//A++; //значение перменной А увеличится на 1
	//НЕЛЬЗЯ!!! С одночными объектами(Переменными, с константами и тд.)
	//pA++; //значение указателя увеличится на 1 int(4 байта) - изменится адрес, хранящийся в указатели
	//++pA; //Так тоже нельзя!
	//*pA++; //Так тоже нельзя!
	//*++pA; //Так тоже нельзя!
	//++*pA; //Так можно, но лучше со скобками
	(*pA)++; //Так можно!
	++(*pA); ///Так можно!
	cout << "Значение переменной А через указатель pA: " << *pA << endl;
	cout << "Содержимое указателя pA: " << pA << endl;
}
