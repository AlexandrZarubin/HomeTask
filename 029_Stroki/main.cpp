// Stroki1

#include <iostream>
#include <stdlib.h>
#include <string.h> //библиотека для работы со строками как с масисвами символов из языка С
#include <stdio.h>  //библиотека ввода-вывода языка С
#include <conio.h>  //библиотека ввода-вывода языка С, в том числе и строк для консоли ОС Windows
#include <ctype.h>  //библиотека функций роботы с символами
#include <Windows.h>
using namespace std;

int main()
{
    system("chcp 1251");
    system("cls");

    //char STR[255] = "Привет, Мир!";
    //int A[15] = { 1,2,3,4,5 };
    //char STR1[20] = {'П','р', 'и', 'в', 'е', 'т', ',', ' ', 'М', 'и', 'р', '!'};
    //cout << A << endl;
    //cout << STR << endl; //от начала строки до символа конца строки
    //cout << STR1 << endl;
    //cout << "Привет, Мир!" << endl;
    //// '\0' - нуль-терминатор(символ конца строки)
    //cout << strlen(STR) << endl; //размер без учета символка конца строки
    //cout << strlen(STR1) << endl;
    //cout << STR1 + 8 << endl; //сдвиг указателя позволяет обработь часть строки начиная с символа с указанным индексом
    //system("cls");
    ////cin >> STR; //считает строку до пробела
    ////cin.getline(STR, 255); //считывает строку с пробелами
    ////cout << STR << endl;
    ////gets_s(STR); //считывает строку с пробелами, если массив статический, размер буфера можно не указывать
    ////puts(STR); //вывод строки до \0 с передовом курсора на новую строку
    //cout << "Для завершения работы нажмите любую клавишу!" << endl;
    //int C=_getch(); //запрос ввода любого символа, возвращает код введенного символа
    ////при этом символ на экран не выводится и нетребуется нажатие Enter
    // do
    // {
    // do
    // {
    // }while(C>=32&&C<=126)
    // cout << "Код символа: " <<C<< endl;
    // if(
    // }while(true);
    // else

    char* Buffer = new char[255] {};//буфер для ввода и анализа строки
    char* Password = nullptr;      //указатель на строку для хранения итогового пароля
    bool Upper = false, Lower = false, Digit = false, Symbol = false, Space = false, Trash = false;
    //флаги букв верхнего и нижнего регистра, цифр, спец. символов, пробела и ненужных символов
    do
    {
        Upper = false; Lower = false; Digit = false; Symbol = false; Space = false; Trash = false;
        system("cls");
        cout << R"(Введите пароль, он должен содеражть:
1. Не менее 8 символов
2. Буквы верхнего регистра только латинского алфавита
3. Буквы нижнего  регистра только латинского алфавита
4. Цифры
5. Специальные символы
6. Пробелы и буквы нелатинского алфавита нельзя использовать!
7. Если введен некорректный символ, он не отобразится на экране 
и после звукового сигнала, проверьте раскладку клавиатуры и повторите ввод!
8. Для для выхода нажмите Esc
)";
        for (int i = 0; i < 254; i++)
        {
            //getchar();//ввод одного символа, выводит на экран при вводит требует подверждения Enter, возвращает код символа
            do
            {
                Buffer[i] = _getch();
                if (Buffer[i] >= 32 & Buffer[i] <= 126)
                {
                    //cout << Buffer[i];
                    putchar(Buffer[i]);//вывод отдельного символа
                    i++;//переход к следующему символу
                }
                else
                    if (Buffer[i] == 27)
                    {
                        cout << "Выход из программы..." << endl;
                        Sleep(1000);
                        delete[] Buffer;
                        return 1;//exit(1);
                    }
                    else
                        if (Buffer[i] == 8)
                        {
                            if (i > 0) Buffer[i - 1] = '\0';
                            i--;
                            system("cls")
                                cout << "\n" << Buffer;
                        }
                        else
                            if (Buffer[i] == 13)//если Enter
                            {
                                Buffer[i + 1] = '\0';//добавляем в \0 в конец строки
                                goto Exit;//кострукция безусловного перехода
                            }
                            else
                            {
                                Beep(500, 200);//звуковой сигнал
                            }
                //if (Buffer[i] == 13)break;//выходи из do{}while(true)
            } while (true);
            //if (Buffer[i] == 13)break;//выход из цикла for
        }
    Exit://Метка для безусловного перехода
        gets_s(Buffer, 255);//для строки, как указатель char* (для динамической строки) нужно указывать размер буффера
        if (strlen(Buffer) < 8)
        {
            cout << "Слишком короткий пароль!" << endl;
            system("pause");
        }
        else
        {
            //цикл анализа каждого символа в строке 
            //for (int i = 0; Buffer[i]!='\0'; i++)//пока недойдем до символа конца строки
            for (int i = 0; i < strlen(Buffer); i++)//пока счетчик меньше размера строки
            {
                //if (Buffer[i] < 32 || Buffer[i]>126)//исключаем неподходящие символы
                ////if (Buffer[i] < ' ' || Buffer[i]>'~')
                //{
                //    cout << "Некоректные символы!" << endl;
                //    Trash = true;
                //    break;//выходи из цикла for
                //}


            }
        }

    } while (true);
    cout << "Пароль " << Password << " Успешно сохранен" << endl;
    delete[] Password;
    Password = nullptr;
}

