// DynamicMemory
#include <iostream>
#include <stdlib.h>
#include <time.h>

using namespace std;

int main()
{
    system("chcp 1251");
    system("cls");
    srand(time(NULL));

    int* PTR = new int; //оператор new запрашивает выделение памяти у ОС под храненение одного объекта типа данных int
    //адрес начала выделенной памяти будет присвоен в указатель PTR, если память не выделена new вернет nullptr

    *PTR = 15;

    cout << PTR << endl;
    cout << *PTR << endl;

    int A = 20; //статическое выделение памяти
    //PTR = &A;  //нельзя "перенацеливать" или обнулять указаетль до окончания работы с динамической памятью!

    delete PTR; //освобождает только динамически выделенную память оператором new
    PTR = nullptr;//после освобождения памяти указатель нужно или обнулить 
    PTR = &A; //или "перенацелить" на другой объект
    cout << PTR << endl;
    cout << *PTR << endl;
    system("cls");

    //PTR = new int(100); //выделение памяти и её инициализация
    PTR = new int{ 100 }; //выделение памяти и её унифицированная инициализация

    if (!PTR) //if(PTR==nullptr) //если память не выделилась
    {
        cout << "Ошибка выделения памяти!" << endl;
        exit(1); //функция выхода из программы
    }
    cout << *PTR << endl;

    //освобождение памяти с проверкой

    if (PTR) //if (PTR!=nullptr) //если указатель не нулевой
    {
        delete PTR;
        PTR = nullptr;
    }
    else cout << "Память уже была освобождена!" << endl;

    //delete PTR; //повторное освобождение памяти не возжможно!
    //освобождение памяти по nullptr не приводит к ошибке!

    int* Mass = new int[10]; //динамическое выделение памяти под массив из 10 элементов типа данных int
    delete[] Mass; //освобождение памяти
    Mass = nullptr;

    system("cls");

    int Size = 0;
    do
    {
        cout << "Введите размер массива: "; cin >> Size;
        if (Size <= 0)cout << "Размер массива должен быть больше нуля! Повторите ввод!" << endl;
    } while (Size <= 0);

    //выделение памяти под Size элементов типа данных int и заполнение их нулями
    int* Array = new int[Size] {}; //int* Array = new int[Size](); 
    if (!Array)
    {
        cout << "Ошибка выделения памяти!" << endl;
        //exit(1); //либо функция выхода из программы
    }
    else //либо работать с памятью, только когда она выделилась
    {
        //работа с динамическим массивом происходит как с обычным статическим массивом
        for (int i = 0; i < Size; i++)
        {
            Array[i] = rand() % (100 - (-99)) - 99;
            cout << Array[i] << " ";
        }
        cout << endl;



        if (Array) //если указатель не нулевой
        {
            delete[] Array;
            Array = nullptr;
        }
        else cout << "Память уже была освобождена!" << endl;
    }
}
